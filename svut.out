#! /opt/homebrew/Cellar/icarus-verilog/12.0/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 9;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/va_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2009.vpi";
S_0x121627620 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x121605f00 .scope autofunction.str, "create_msg" "create_msg" 3 112, 3 112 0, S_0x121627620;
 .timescale 0 0;
v0x600003f64120_0 .var/str "assertion";
; Variable create_msg is string return value of scope S_0x121605f00
v0x600003f64240_0 .var/str "message";
TD_$unit.create_msg ;
    %load/str v0x600003f64240_0;
    %pushi/str "";
    %cmp/str;
    %flag_inv 4;
    %flag_get/vec4 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %load/str v0x600003f64240_0;
    %concati/str " (";
    %load/str v0x600003f64120_0;
    %concat/str;
    %concati/str ")";
    %ret/str 0; Assign to create_msg
    %jmp T_0.1;
T_0.0 ;
    %load/str v0x600003f64120_0;
    %ret/str 0; Assign to create_msg
T_0.1 ;
    %end;
S_0x121605d90 .scope module, "alu_testbench" "alu_testbench" 4 8;
 .timescale -9 -9;
P_0x60000184ca40 .param/l "WORD_SIZE" 0 4 12, +C4<00000000000000000000000000100000>;
v0x600003f64a20_0 .var "aluIn1", 31 0;
v0x600003f64ab0_0 .var "aluIn2", 31 0;
v0x600003f64b40_0 .net "aluOut", 31 0, v0x600003f64360_0;  1 drivers
v0x600003f64bd0_0 .net "branchTaken", 0 0, v0x600003f643f0_0;  1 drivers
v0x600003f64c60_0 .var "funct3", 2 0;
v0x600003f64cf0_0 .var "funct7", 6 0;
v0x600003f64d80_0 .var "immediate", 31 0;
v0x600003f64e10_0 .net "newpc", 31 0, v0x600003f647e0_0;  1 drivers
v0x600003f64ea0_0 .var "opcode", 6 0;
v0x600003f64f30_0 .var "pc", 31 0;
v0x600003f64fc0_0 .var/i "svut_critical", 31 0;
v0x600003f65050_0 .var/i "svut_error", 31 0;
v0x600003f650e0_0 .var/i "svut_error_total", 31 0;
v0x600003f65170_0 .var/str "svut_fail_list";
v0x600003f65200_0 .var/str "svut_msg";
v0x600003f65290_0 .var/i "svut_nb_test", 31 0;
v0x600003f65320_0 .var/i "svut_nb_test_success", 31 0;
v0x600003f653b0_0 .var/i "svut_status", 31 0;
v0x600003f65440_0 .var/str "svut_suite_name";
v0x600003f654d0_0 .var/str "svut_test_name";
v0x600003f65560_0 .var/i "svut_test_number", 31 0;
v0x600003f655f0_0 .var/i "svut_warning", 31 0;
v0x600003f65680_0 .var/str "testnum";
S_0x1216050d0 .scope module, "dut" "alu" 4 29, 5 3 0, S_0x121605d90;
 .timescale -9 -9;
    .port_info 0 /INPUT 7 "opcode";
    .port_info 1 /INPUT 3 "funct3";
    .port_info 2 /INPUT 7 "funct7";
    .port_info 3 /INPUT 32 "operand1";
    .port_info 4 /INPUT 32 "operand2";
    .port_info 5 /INPUT 32 "immediate";
    .port_info 6 /INPUT 32 "PC";
    .port_info 7 /OUTPUT 32 "alu_out";
    .port_info 8 /OUTPUT 32 "out_PC";
    .port_info 9 /OUTPUT 1 "branch_taken";
v0x600003f642d0_0 .net "PC", 31 0, v0x600003f64f30_0;  1 drivers
v0x600003f64360_0 .var "alu_out", 31 0;
v0x600003f643f0_0 .var "branch_taken", 0 0;
v0x600003f64480_0 .net "funct3", 2 0, v0x600003f64c60_0;  1 drivers
v0x600003f64510_0 .net "funct7", 6 0, v0x600003f64cf0_0;  1 drivers
v0x600003f645a0_0 .net "immediate", 31 0, v0x600003f64d80_0;  1 drivers
v0x600003f64630_0 .net "opcode", 6 0, v0x600003f64ea0_0;  1 drivers
v0x600003f646c0_0 .net "operand1", 31 0, v0x600003f64a20_0;  1 drivers
v0x600003f64750_0 .net "operand2", 31 0, v0x600003f64ab0_0;  1 drivers
v0x600003f647e0_0 .var "out_PC", 31 0;
E_0x60000184cac0/0 .event anyedge, v0x600003f642d0_0, v0x600003f645a0_0, v0x600003f64630_0, v0x600003f64510_0;
E_0x60000184cac0/1 .event anyedge, v0x600003f646c0_0, v0x600003f64750_0, v0x600003f64480_0, v0x600003f647e0_0;
E_0x60000184cac0 .event/or E_0x60000184cac0/0, E_0x60000184cac0/1;
S_0x121605240 .scope task, "run" "run" 4 70, 4 70 0, S_0x121605d90;
 .timescale -9 -9;
v0x600003f64870_0 .var "msg", 0 0;
TD_alu_testbench.run ;
    %pushi/str "TESTSUITE_ALU";
    %store/str v0x600003f65440_0;
    %vpi_call/w 4 73 "$display", "\000" {0 0 0};
    %pushi/str "Start testsuite << TESTSUITE_ALU >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 76 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001000101 {0 0 0};
    %vpi_call/w 4 93 "$display", "\000" {0 0 0};
    %vpi_call/w 4 94 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "ADD_TEST";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 97 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001011011 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "ADD_TEST";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 0, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 23, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 7, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "FAIL_IF";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %cmpi/ne 30, 0, 32;
    %jmp/0xz  T_1.2, 4;
    %vpi_call/w 4 104 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001100010 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.2 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.4, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 107 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001100101 {0 0 0};
    %jmp T_1.5;
T_1.4 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 112 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001100101 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.5 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 106 "$display", "\000" {0 0 0};
    %vpi_call/w 4 107 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "SUB_TEST";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 110 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001101000 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "SUB_TEST";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 32, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "FAIL_IF";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %cmpi/ne 2, 0, 32;
    %jmp/0xz  T_1.6, 4;
    %vpi_call/w 4 116 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001101110 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.6 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.8, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 119 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001110001 {0 0 0};
    %jmp T_1.9;
T_1.8 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 124 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001110001 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.9 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 117 "$display", "\000" {0 0 0};
    %vpi_call/w 4 118 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_OR1";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 121 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001110011 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_OR1";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 0, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 11, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 18, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 27, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.10, 8;
    %vpi_call/w 4 128 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001111010 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.10 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.12, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 130 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001111100 {0 0 0};
    %jmp T_1.13;
T_1.12 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 135 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001111100 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.13 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 128 "$display", "\000" {0 0 0};
    %vpi_call/w 4 129 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_OR2";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 132 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000001111110 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_OR2";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 0, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.14, 8;
    %vpi_call/w 4 139 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010000101 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.14 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.16, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 141 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010000111 {0 0 0};
    %jmp T_1.17;
T_1.16 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 146 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010000111 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.17 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 139 "$display", "\000" {0 0 0};
    %vpi_call/w 4 140 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_AND";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 143 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010001001 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_AND";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 0, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 18, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 14, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 2, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.18, 8;
    %vpi_call/w 4 150 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010010000 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.18 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.20, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 152 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010010010 {0 0 0};
    %jmp T_1.21;
T_1.20 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 157 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010010010 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.21 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 150 "$display", "\000" {0 0 0};
    %vpi_call/w 4 151 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_BRANCH";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 154 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010010100 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_BRANCH";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 99, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.22, 8;
    %vpi_call/w 4 160 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010011010 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.22 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64bd0_0;
    %pad/u 32;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.24, 8;
    %vpi_call/w 4 161 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010011011 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.24 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.26, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 163 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010011101 {0 0 0};
    %jmp T_1.27;
T_1.26 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 168 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010011101 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.27 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 161 "$display", "\000" {0 0 0};
    %vpi_call/w 4 162 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_BRANCH2";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 165 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010011111 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_BRANCH2";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 400, 0, 32;
    %store/vec4 v0x600003f64f30_0, 0, 32;
    %pushi/vec4 99, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 60, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.28, 8;
    %vpi_call/w 4 173 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010100111 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.28 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64bd0_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.30, 8;
    %vpi_call/w 4 174 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010101000 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.30 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64e10_0;
    %pushi/vec4 460, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.32, 8;
    %vpi_call/w 4 175 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010101001 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.32 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.34, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 177 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010101011 {0 0 0};
    %jmp T_1.35;
T_1.34 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 182 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010101011 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.35 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 175 "$display", "\000" {0 0 0};
    %vpi_call/w 4 176 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_BNE";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 179 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010101101 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_BNE";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 400, 0, 32;
    %store/vec4 v0x600003f64f30_0, 0, 32;
    %pushi/vec4 99, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 60, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.36, 8;
    %vpi_call/w 4 187 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010110101 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.36 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64bd0_0;
    %pad/u 32;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.38, 8;
    %vpi_call/w 4 188 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010110110 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.38 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.40, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 190 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010111000 {0 0 0};
    %jmp T_1.41;
T_1.40 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 195 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010111000 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.41 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 188 "$display", "\000" {0 0 0};
    %vpi_call/w 4 189 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_BGE";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 192 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000010111010 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_BGE";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 400, 0, 32;
    %store/vec4 v0x600003f64f30_0, 0, 32;
    %pushi/vec4 99, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 5, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 60, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64bd0_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.42, 8;
    %vpi_call/w 4 200 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011000010 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.42 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.44, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 202 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011000100 {0 0 0};
    %jmp T_1.45;
T_1.44 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 207 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011000100 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.45 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 200 "$display", "\000" {0 0 0};
    %vpi_call/w 4 201 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_BLT";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 204 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011000110 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_BLT";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 400, 0, 32;
    %store/vec4 v0x600003f64f30_0, 0, 32;
    %pushi/vec4 99, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %pushi/vec4 4, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 60, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64bd0_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.46, 8;
    %vpi_call/w 4 212 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011001110 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.46 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.48, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 214 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011010000 {0 0 0};
    %jmp T_1.49;
T_1.48 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 219 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011010000 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.49 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 212 "$display", "\000" {0 0 0};
    %vpi_call/w 4 213 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "OPCODE_JUMP";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 216 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011010010 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "OPCODE_JUMP";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 400, 0, 32;
    %store/vec4 v0x600003f64f30_0, 0, 32;
    %pushi/vec4 111, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 18, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %pushi/vec4 60, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64bd0_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.50, 8;
    %vpi_call/w 4 223 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011011001 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.50 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64e10_0;
    %pushi/vec4 460, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.52, 8;
    %vpi_call/w 4 224 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011011010 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.52 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.54, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 226 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011011100 {0 0 0};
    %jmp T_1.55;
T_1.54 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 231 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011011100 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.55 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 225 "$display", "\000" {0 0 0};
    %vpi_call/w 4 226 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "MULTIPLICATION";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 229 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011011111 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "MULTIPLICATION";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 1, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 42, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 126, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.56, 8;
    %vpi_call/w 4 236 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011100110 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.56 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.58, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 238 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011101000 {0 0 0};
    %jmp T_1.59;
T_1.58 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 243 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011101000 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.59 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 236 "$display", "\000" {0 0 0};
    %vpi_call/w 4 237 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "MULTIPLICATION2";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 240 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011101010 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "MULTIPLICATION2";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 51, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 1, 0, 7;
    %store/vec4 v0x600003f64cf0_0, 0, 7;
    %pushi/vec4 42, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 4294967293, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 4294967170, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.60, 8;
    %vpi_call/w 4 247 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011110001 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.60 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.62, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 249 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011110011 {0 0 0};
    %jmp T_1.63;
T_1.62 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 254 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011110011 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.63 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 247 "$display", "\000" {0 0 0};
    %vpi_call/w 4 248 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "ADDI";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 251 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011110101 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "ADDI";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 19, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 7, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 10, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.64, 8;
    %vpi_call/w 4 257 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011111011 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.64 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.66, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 260 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011111110 {0 0 0};
    %jmp T_1.67;
T_1.66 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 265 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000011111110 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.67 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 258 "$display", "\000" {0 0 0};
    %vpi_call/w 4 259 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "AUIPC";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 262 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100000000 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "AUIPC";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 23, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 42, 0, 32;
    %store/vec4 v0x600003f64f30_0, 0, 32;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 50, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.68, 8;
    %vpi_call/w 4 268 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100000110 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.68 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.70, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 270 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100001000 {0 0 0};
    %jmp T_1.71;
T_1.70 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 275 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100001000 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.71 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 268 "$display", "\000" {0 0 0};
    %vpi_call/w 4 269 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "SLLI";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 272 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100001010 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "SLLI";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 19, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 4, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.72, 8;
    %vpi_call/w 4 279 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100010001 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.72 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.74, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 281 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100010011 {0 0 0};
    %jmp T_1.75;
T_1.74 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 286 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100010011 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.75 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 279 "$display", "\000" {0 0 0};
    %vpi_call/w 4 280 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "SRLI";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 283 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100010101 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "SRLI";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 19, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x600003f64c60_0, 0, 3;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0x600003f64a20_0, 0, 32;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v0x600003f64ab0_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 2, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.76, 8;
    %vpi_call/w 4 290 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100011100 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.76 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.78, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 292 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100011110 {0 0 0};
    %jmp T_1.79;
T_1.78 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 297 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100011110 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.79 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %vpi_call/w 4 290 "$display", "\000" {0 0 0};
    %vpi_call/w 4 291 "$sformat", v0x600003f65680_0, "%0d", v0x600003f65560_0 {0 0 0};
    %pushi/str "Starting << ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %concati/str "LUI";
    %concati/str " >>";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 294 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100100000 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64900_0, 0, 1;
    %fork TD_alu_testbench.setup, S_0x1216280a0;
    %join;
    %pushi/str "LUI";
    %store/str v0x600003f654d0_0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %load/vec4 v0x600003f65290_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 55, 0, 7;
    %store/vec4 v0x600003f64ea0_0, 0, 7;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f64d80_0, 0, 32;
    %delay 2, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %alloc S_0x121605f00;
    %pushi/str "ASSERT";
    %pushi/str "";
    %store/str v0x600003f64240_0;
    %store/str v0x600003f64120_0;
    %callf/str TD_$unit.create_msg, S_0x121605f00;
    %free S_0x121605f00;
    %store/str v0x600003f65200_0;
    %load/vec4 v0x600003f64b40_0;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.80, 8;
    %vpi_call/w 4 298 "$display", "\033[1;31mERROR: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100100100 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f65050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
T_1.80 ;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600003f64990_0, 0, 1;
    %fork TD_alu_testbench.teardown, S_0x121628210;
    %join;
    %load/vec4 v0x600003f65050_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.82, 4;
    %load/vec4 v0x600003f65320_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " pass";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 300 "$display", "\033[0;32mSUCCESS: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100100110 {0 0 0};
    %jmp T_1.83;
T_1.82 ;
    %pushi/str "<< ";
    %concati/str "Test ";
    %load/str v0x600003f65680_0;
    %concat/str;
    %concati/str ": ";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str " >>";
    %concati/str " fail";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 305 "$display", "\033[1;31mFAILURE: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100100110 {0 0 0};
    %load/str v0x600003f65170_0;
    %concati/str " '";
    %load/str v0x600003f654d0_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65170_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x600003f650e0_0;
    %load/vec4 v0x600003f65050_0;
    %add;
    %store/vec4 v0x600003f650e0_0, 0, 32;
T_1.83 ;
    %load/vec4 v0x600003f65560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %end;
S_0x1216280a0 .scope task, "setup" "setup" 4 57, 4 57 0, S_0x121605d90;
 .timescale -9 -9;
v0x600003f64900_0 .var "msg", 0 0;
TD_alu_testbench.setup ;
    %end;
S_0x121628210 .scope task, "teardown" "teardown" 4 63, 4 63 0, S_0x121605d90;
 .timescale -9 -9;
v0x600003f64990_0 .var "msg", 0 0;
TD_alu_testbench.teardown ;
    %end;
    .scope S_0x1216050d0;
T_4 ;
    %wait E_0x60000184cac0;
    %load/vec4 v0x600003f642d0_0;
    %load/vec4 v0x600003f645a0_0;
    %add;
    %store/vec4 v0x600003f647e0_0, 0, 32;
    %load/vec4 v0x600003f64630_0;
    %dup/vec4;
    %pushi/vec4 51, 0, 7;
    %cmp/u;
    %jmp/1 T_4.0, 6;
    %dup/vec4;
    %pushi/vec4 19, 0, 7;
    %cmp/u;
    %jmp/1 T_4.1, 6;
    %dup/vec4;
    %pushi/vec4 23, 0, 7;
    %cmp/u;
    %jmp/1 T_4.2, 6;
    %dup/vec4;
    %pushi/vec4 55, 0, 7;
    %cmp/u;
    %jmp/1 T_4.3, 6;
    %dup/vec4;
    %pushi/vec4 99, 0, 7;
    %cmp/u;
    %jmp/1 T_4.4, 6;
    %dup/vec4;
    %pushi/vec4 111, 0, 7;
    %cmp/u;
    %jmp/1 T_4.5, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 7;
    %cmp/u;
    %jmp/1 T_4.6, 6;
    %dup/vec4;
    %pushi/vec4 35, 0, 7;
    %cmp/u;
    %jmp/1 T_4.7, 6;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.9;
T_4.0 ;
    %load/vec4 v0x600003f64510_0;
    %dup/vec4;
    %pushi/vec4 32, 0, 7;
    %cmp/u;
    %jmp/1 T_4.10, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 7;
    %cmp/u;
    %jmp/1 T_4.11, 6;
    %dup/vec4;
    %pushi/vec4 0, 0, 7;
    %cmp/u;
    %jmp/1 T_4.12, 6;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.14;
T_4.10 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %sub;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.14;
T_4.11 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %mul;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.14;
T_4.12 ;
    %load/vec4 v0x600003f64480_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_4.15, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 3;
    %cmp/u;
    %jmp/1 T_4.16, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_4.17, 6;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.19;
T_4.15 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %add;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.19;
T_4.16 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %and;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.19;
T_4.17 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %or;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.19;
T_4.19 ;
    %pop/vec4 1;
    %jmp T_4.14;
T_4.14 ;
    %pop/vec4 1;
    %jmp T_4.9;
T_4.1 ;
    %load/vec4 v0x600003f64480_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_4.20, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 3;
    %cmp/u;
    %jmp/1 T_4.21, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 3;
    %cmp/u;
    %jmp/1 T_4.22, 6;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.24;
T_4.20 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f645a0_0;
    %add;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.24;
T_4.21 ;
    %load/vec4 v0x600003f646c0_0;
    %ix/getv 4, v0x600003f64750_0;
    %shiftl 4;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.24;
T_4.22 ;
    %load/vec4 v0x600003f646c0_0;
    %ix/getv 4, v0x600003f64750_0;
    %shiftr 4;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.24;
T_4.24 ;
    %pop/vec4 1;
    %jmp T_4.9;
T_4.2 ;
    %load/vec4 v0x600003f647e0_0;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.9;
T_4.3 ;
    %load/vec4 v0x600003f645a0_0;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.9;
T_4.4 ;
    %load/vec4 v0x600003f64480_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_4.25, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 3;
    %cmp/u;
    %jmp/1 T_4.26, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 3;
    %cmp/u;
    %jmp/1 T_4.27, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 3;
    %cmp/u;
    %jmp/1 T_4.28, 6;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.30;
T_4.25 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %cmp/e;
    %flag_get/vec4 4;
    %store/vec4 v0x600003f643f0_0, 0, 1;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %sub;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.30;
T_4.26 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %cmp/ne;
    %flag_get/vec4 4;
    %store/vec4 v0x600003f643f0_0, 0, 1;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %sub;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.30;
T_4.27 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %cmp/u;
    %flag_get/vec4 5;
    %store/vec4 v0x600003f643f0_0, 0, 1;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %sub;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.30;
T_4.28 ;
    %load/vec4 v0x600003f64750_0;
    %load/vec4 v0x600003f646c0_0;
    %cmp/u;
    %flag_get/vec4 5;
    %jmp/1 T_4.31, 5;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %cmp/e;
    %flag_get/vec4 4;
    %or;
T_4.31;
    %store/vec4 v0x600003f643f0_0, 0, 1;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f64750_0;
    %sub;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.30;
T_4.30 ;
    %pop/vec4 1;
    %jmp T_4.9;
T_4.5 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600003f643f0_0, 0, 1;
    %jmp T_4.9;
T_4.6 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f645a0_0;
    %add;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.9;
T_4.7 ;
    %load/vec4 v0x600003f646c0_0;
    %load/vec4 v0x600003f645a0_0;
    %add;
    %store/vec4 v0x600003f64360_0, 0, 32;
    %jmp T_4.9;
T_4.9 ;
    %pop/vec4 1;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0x121605d90;
T_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65560_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f653b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f655f0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f64fc0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65050_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f650e0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65290_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600003f65320_0, 0, 32;
    %pushi/str "";
    %store/str v0x600003f654d0_0;
    %pushi/str "";
    %store/str v0x600003f65440_0;
    %pushi/str "";
    %store/str v0x600003f65200_0;
    %pushi/str "Failling test(s):";
    %store/str v0x600003f65170_0;
    %end;
    .thread T_5, $init;
    .scope S_0x121605d90;
T_6 ;
    %vpi_call/w 4 50 "$dumpfile", "alu_testbench.vcd" {0 0 0};
    %vpi_call/w 4 51 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x121605d90 {0 0 0};
    %end;
    .thread T_6;
    .scope S_0x121605d90;
T_7 ;
    %pushi/vec4 0, 0, 8; draw_string_vec4
    %pad/u 1;
    %store/vec4 v0x600003f64870_0, 0, 1;
    %fork TD_alu_testbench.run, S_0x121605240;
    %join;
    %vpi_call/w 4 301 "$display", "\000" {0 0 0};
    %pushi/str "Stop testsuite '";
    %load/str v0x600003f65440_0;
    %concat/str;
    %concati/str "'";
    %store/str v0x600003f65200_0;
    %vpi_call/w 4 304 "$display", "\033[0;34mINFO: %s (@ %0t) (%s:%0d)\033[0m", v0x600003f65200_0, $realtime, "alu_testbench.sv", 32'sb00000000000000000000000100101000 {0 0 0};
    %load/vec4 v0x600003f650e0_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz  T_7.0, 5;
    %vpi_call/w 4 306 "$display", "\033[1;31m" {0 0 0};
    %vpi_call/w 4 307 "$display", v0x600003f65170_0 {0 0 0};
    %vpi_call/w 4 308 "$display", "\000" {0 0 0};
T_7.0 ;
    %vpi_call/w 4 310 "$display", "  \033[1;33m- Warning number:  %0d\033[0m", v0x600003f655f0_0 {0 0 0};
    %vpi_call/w 4 311 "$display", "  \033[1;35m- Critical number: %0d\033[0m", v0x600003f64fc0_0 {0 0 0};
    %vpi_call/w 4 312 "$display", "  \033[1;31m- Error number:    %0d\033[0m", v0x600003f650e0_0 {0 0 0};
    %load/vec4 v0x600003f65320_0;
    %load/vec4 v0x600003f65290_0;
    %cmp/ne;
    %jmp/0xz  T_7.2, 4;
    %vpi_call/w 4 314 "$display", "  \033[1;31m- STATUS: %0d/%0d test(s) passed\033[0m\012", v0x600003f65320_0, v0x600003f65290_0 {0 0 0};
    %jmp T_7.3;
T_7.2 ;
    %vpi_call/w 4 316 "$display", "  \033[0;32m- STATUS: %0d/%0d test(s) passed\033[0m\012", v0x600003f65320_0, v0x600003f65290_0 {0 0 0};
T_7.3 ;
    %vpi_call/w 4 318 "$finish" {0 0 0};
    %end;
    .thread T_7;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "-";
    "./svut_h.sv";
    "alu_testbench.sv";
    "./alu.sv";
